package remote.corba;


/**
* remote/corba/BankServerRemotePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from BankServer.idl
* Sunday, October 22, 2017 6:52:51 PM EDT
*/

public abstract class BankServerRemotePOA extends org.omg.PortableServer.Servant
 implements remote.corba.BankServerRemoteOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("transferAccount", new java.lang.Integer (0));
    _methods.put ("createAccountRecord", new java.lang.Integer (1));
    _methods.put ("editRecord", new java.lang.Integer (2));
    _methods.put ("deposit", new java.lang.Integer (3));
    _methods.put ("withdraw", new java.lang.Integer (4));
    _methods.put ("getBalance", new java.lang.Integer (5));
    _methods.put ("shutdown", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // remote/corba/BankServerRemote/transferAccount
       {
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String address = in.read_string ();
         String phone = in.read_string ();
         String balance = in.read_string ();
         String $result = null;
         $result = this.transferAccount (firstName, lastName, address, phone, balance);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // remote/corba/BankServerRemote/createAccountRecord
       {
         String managerId = in.read_string ();
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String address = in.read_string ();
         String phone = in.read_string ();
         String branch = in.read_string ();
         String $result = null;
         $result = this.createAccountRecord (managerId, firstName, lastName, address, phone, branch);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // remote/corba/BankServerRemote/editRecord
       {
         String managerId = in.read_string ();
         String customerId = in.read_string ();
         String fieldName = in.read_string ();
         String newValue = in.read_string ();
         String $result = null;
         $result = this.editRecord (managerId, customerId, fieldName, newValue);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // remote/corba/BankServerRemote/deposit
       {
         String customerId = in.read_string ();
         String amount = in.read_string ();
         String $result = null;
         $result = this.deposit (customerId, amount);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // remote/corba/BankServerRemote/withdraw
       {
         String customerId = in.read_string ();
         String amount = in.read_string ();
         String $result = null;
         $result = this.withdraw (customerId, amount);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // remote/corba/BankServerRemote/getBalance
       {
         String customerId = in.read_string ();
         String $result = null;
         $result = this.getBalance (customerId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // remote/corba/BankServerRemote/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:remote/corba/BankServerRemote:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public BankServerRemote _this() 
  {
    return BankServerRemoteHelper.narrow(
    super._this_object());
  }

  public BankServerRemote _this(org.omg.CORBA.ORB orb) 
  {
    return BankServerRemoteHelper.narrow(
    super._this_object(orb));
  }


} // class BankServerRemotePOA
